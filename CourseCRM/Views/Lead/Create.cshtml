@model Lead
@{
    ViewData["Title"] = "CreateLeader";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">Cadastrar um novo Estudante</h1>
</div>


<div class="text-center">
    <h3 class="display-8 fw-bold">Digite seus dados</h3>
</div>

<br />

@if (TempData["MensagemErro"] != null)
{
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert position-absolute top-0 end-0" data-bs-dismiss="alert" aria-label="Close">X</button>
        @TempData["MensagemErro"]
        </div>
}

<form asp-controller="Lead" asp-action="Create" method="post">

    <div class="form-group">
        <label for="nome" class="form-label">Nome</label>
        <input type="text" asp-for="Name" class="form-control" placeholder="Digite o nome do estudante">
        @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
    </div>

    <div class="form-group mt-2">
        <label for="nome" class="form-label">E-mail</label>
        <input type="text" asp-for="Email" class="form-control" placeholder="Digite o e-mail do estudante">
        @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
    </div>

    <div class="form-group mt-2">
        <label for="nome" class="form-label">CPF (Somente os números)</label>
        <input max="11" min="11" type="text" asp-for="Cpf" class="form-control" placeholder="Digite o CPF do estudante(Somente os números)">
        @Html.ValidationMessageFor(x => x.Cpf, null, new { @class = "text-danger" })

    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success btn-block">Adicionar</button>
        <a class="btn btn-secondary btn-block" asp-controller="Home" asp-action="Index" role="button">Voltar</a>
    </div>

</form>
